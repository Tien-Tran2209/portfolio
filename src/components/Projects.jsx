import {
    Stepper,
    Step,
    StepLabel,
    Box,
    Card,
    CardContent,
    Typography,
    Avatar,
    StepConnector,
    duration,
    Grid
  } from "@mui/material";
  import { motion } from "framer-motion";
  import p1 from '../assets/me.jpg';
  import p2 from '../assets/me.jpg';
import p3 from '../assets/profile.jpg';
import logo_Competencia from '../assets/logo_Competencia.png';
import logo_Dopamicaffeine from '../assets/logo_Dopamicaffeine.png';
import logo_MindraceMaster from '../assets/logo_MindraceMaster.jpeg';
import RoundedPentagonPhoto from './RoundedPentagonPhoto';
import { TbBrandCSharp } from "react-icons/tb";

const containerVariants = {
  hidden: { opacity: 0 },
  show: {
    opacity: 1,
    transition: {
      staggerChildren: 0.5,
      delayChildren: 0.2,
    },
  },
};

const itemVariants = {
  hidden: { opacity: 0, y: 50 },
  show: { opacity: 1, y: 0 , transition: {
    duration: 1,
    ease: "easeOut",
  },}
};
import {
    FaNodeJs, FaPhp} from "react-icons/fa";
  
  const projects = [
    {
      logo:    <Avatar
      src={logo_Competencia}
      sx={{ width: 40, height: 40, mr: 2 }}
    />,
      suject: "Conception d'une plateforme de gestion des comp√©tences scolaires",
      title: "",
      duration: "11/2024 - 01/2025",
      description: `Conception de l'architecture de l'application (mod√®le MVC)
D√©veloppement d'interfaces graphiques interactives sous WPF
Mise en place des op√©rations de cr√©ation, consultation, modification et suppression des comp√©tences et √©valuations
Int√©gration d'un module de commentaires entre enseignants et √©l√®ves
D√©ploiement d'une base de donn√©es PostgreSQL pour stocker les r√©sultats`,
      skills: [
        "C#",
        "NextWPFJs",
        "PostgreSQL",
        "Git",
      ],
    },
    {
      logo: <Avatar
      src={logo_Dopamicaffeine}
      sx={{ width: 40, height: 40, mr: 2 }}
    />,
      suject: "Cr√©ation d'une plateforme web de partage de contenus",
      title: " üèÜ Projet class√© 1·µâ ≥ parmi les projets de 1 ≥·µâ ann√©e (18,64/20)",
      duration: "05/2024 - 07/2024",
      description:  `Conception et impl√©mentation l‚Äôarchitecture MVC du projet
Cr√©ation d'une base de donn√©e relationnelle avec des tables interconnect√©es pour g√©rer les donn√©es
D√©veloppement des fonctionnalit√©s front-end : pages d'inscription, de connexion, de publication et de consultation de contenu
Conception et mise en ≈ìuvre des processus de gestion des utilisateurs et des contenus, incluant l'ajout, la modification, l'affichage et la suppression`,
      skills: [
        "PHP",
        "HTML",
        "CSS",
        "MySQL",
        "SQL Serveur",
        "Git",
      ],
    },
    {
        logo: <Avatar
        src={logo_MindraceMaster}
        sx={{ width: 40, height: 40, mr: 2 }}
      />,
        suject: "D√©veloppement d‚Äôun jeu de m√©moire en ligne",
        title: " üèÜ 2·µâ meilleur projet de 1 ≥·µâ ann√©e (19,17/20)",
        duration: "11/2023 - 01/2024",
        description:  `Cr√©ation d'interface utilisateur dynamiques et r√©actives (GUI)
Mise en place d'un syst√®me d'authentification et d√©veloppement de la logique du jeu
Int√©gration de niveaux de difficult√© multiples, d'un mode multijoueur et d'un syst√®me de sauvegarde des scores pour enrichir l'exp√©rience utilisateur`,
        skills: [
          "Node.js",
          "JavaScript",
          "HTML",
          "CSS",
          "Git"
        ],
      },
  ];
  
  export default function Projects() {
    return (
      <Box sx={{ backgroundColor: "#0f172a", color: "#fff", width : '100%'}}>
        {/* <Typography variant="h5" align="center" fontWeight="bold" mb={1} sx ={{ fontFamily: "'Fira Code', monospace",  color: "#10B981",}}>
          Projets
        </Typography>
   */}
        <Stepper
          orientation="vertical"
          connector={<StepConnector />}
          sx={{
            '& .MuiStepConnector-line': {
              borderColor: '#0f172a',
            },
            px: { xs: 2, md: 6 }
          }}
        >
              <motion.div
      variants={containerVariants}
      initial="hidden"
  whileInView="show"
  viewport={{ once: true, amount: 0.1 }} // start animation when 30% of the section is visible
    >
           <Grid container spacing={2}>
          <Grid size={6}>
          {projects.map((project, index) => (
      
      <Step key={index} active sx={{width : '100%'}}>
        <StepLabel
          icon={
              <motion.div key={index} variants={itemVariants}>
            <Box
              sx={{
                backgroundColor: "#10B981",
                p: 1.5,
                borderRadius: "50%",
                color: "white",
                display: "flex",
                alignItems: "center",
                justifyContent: "center",
                marginRight : "50px"
              }}
            >
              {index == 0 ? <TbBrandCSharp   size = {20}/>  : index == 1 ? <FaPhp size={20}/> : <FaNodeJs size={20} />}
            </Box>
            </motion.div>
          }
        >
                   <motion.div key={index} variants={itemVariants}>
          <Card
            sx={{
              backgroundColor: "#111827",
              color: "white",
              borderRadius: 10,
              boxShadow: 3,
              padding : '10px',
              border: '1px solid',
              borderColor: 'rgba(255, 255, 255, 0.3)', 
            }}
          >
            <CardContent>
              <Box sx={{ display: "flex", alignItems: "center", mb: 1 }}>
               {project.logo}
                <Typography variant="h6" fontWeight="bold">
                  {project.suject}
                </Typography>
              </Box>

              <Typography sx={{ fontSize: "0.9rem" }} color="#ff6f61">
                {project.title}
              </Typography>

              <Typography variant="body2" sx={{ mt: 1 }}>
      <ul>
        {project.description.split('\n').map((line, index) => (
          <li style={{ marginBottom: '0.7em' }} key={index}>{line}</li>
        ))}
      </ul>
    </Typography>

              <Box sx={{ mt: 1, display: "flex", flexWrap: "wrap", gap: 1 }}>
                {project.skills.map((skill, idx) => (
                  <Box
                    key={idx}
                    sx={{
                      backgroundColor: "#334155",
                      px: 1.5,
                      py: 0.5,
                      borderRadius: 1,
                      fontSize: "0.75rem",
                      fontFamily: "monospace",
                    }}
                  >
                    {skill}
                  </Box>
                ))}
              </Box>

              <Typography
                variant="caption"
                color="gray"
                sx={{ display: "block", mt: 2 }}
              >
                {project.duration}
              </Typography>
            </CardContent>
          </Card>
          </motion.div>
        </StepLabel>
      </Step>
       
    ))}
          </Grid>
          <Grid size={6}>
            <Grid container spacing={2}>
            <Grid size={6}>
         
            <RoundedPentagonPhoto image={p1} size={350} />
          
            <RoundedPentagonPhoto image={p2} size={350} />
            </Grid>
            <Grid size={6} style={{ gridRow: 'span 2',  justifyItems: 'center', 
              alignItems: 'center',    display: 'flex' }}>
            <RoundedPentagonPhoto image={p3} size={350} />
            </Grid>
            </Grid>
          </Grid>
          </Grid>
       
          </motion.div>
        </Stepper>
      </Box>
    );
  }
  